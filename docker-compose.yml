version: '3.7'

services:
  node:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
      args:
        - USER_ID=${USER_ID:-1000}
        - GROUP_ID=${GROUP_ID:-1000}
        - http_proxy
        - https_proxy
        - no_proxy
    image: learning-node/node:latest
    ports:
      - "3000:3000"
      - "9229:9229"
    networks:
      - main
    stdin_open: true
    tty: true
    volumes:
      - ./:/app
    command: npm run start:debug

  database:
    image: postgres:13-alpine
    restart: unless-stopped
    networks:
      - main
    ports:
      - "54321:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./:/app
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  elasticsearch:
    restart: unless-stopped
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: "-Xms2g -Xmx2g"
      xpack.monitoring.enabled: "true"
      xpack.security.enabled: "false"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - main

  apm-server:
    restart: unless-stopped
    image: docker.elastic.co/apm/apm-server:7.12.0
    networks:
      - main
    ports:
    - 8200:8200
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
  kibana:
    restart: unless-stopped
    image: docker.elastic.co/kibana/kibana:7.12.0
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - main


volumes:
  db-data:
    driver: local
  es-data:
    driver: local

networks:
  main:
    driver: bridge
