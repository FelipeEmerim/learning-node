version: '3.8'

services:
  node:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
      args:
        - USER_ID=${USER_ID:-1000}
        - GROUP_ID=${GROUP_ID:-1000}
        - http_proxy
        - https_proxy
        - no_proxy
    image: learning-node/node:latest
    ports:
      - "3000:3000"
      - "9229:9229"
    networks:
      - main
    stdin_open: true
    tty: true
    volumes:
      - ./:/app
    command: npm run start:debug

  users:
    image: postgres:13-alpine
    restart: unless-stopped
    networks:
      - main
    ports:
      - "54321:5432"
    volumes:
      - users-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${USERS_DB_USERNAME}
      - POSTGRES_PASSWORD=${USERS_DB_PASSWORD}

  cats:
    image: postgres:13-alpine
    restart: unless-stopped
    networks:
      - main
    ports:
      - "54322:5432"
    volumes:
      - cats-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${CATS_DB_USERNAME}
      - POSTGRES_PASSWORD=${CATS_DB_PASSWORD}

volumes:
  users-db-data:
    driver: local
  cats-db-data:
    driver: local

networks:
  main:
    driver: bridge
